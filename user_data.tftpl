#!/usr/bin/env bash

set -ux

echo "[${namespace}][${project}][$(date)] Start tests"

echo "[${namespace}][${project}][$(date)] Setup environment variables"
export AWS_ACCESS_KEY_ID=${aws_access_key_id}
export AWS_SECRET_ACCESS_KEY=${aws_secret_access_key}
export INSTANCE_ID=$(wget -q -O - http://instance-data/latest/meta-data/instance-id)
export WORKDIR=/home/ubuntu
export ECHIDNA_DIRECTORY=echidna

echo "[${namespace}][${project}][$(date)] Go to working directory"
cd $WORKDIR

echo "[${namespace}][${project}][$(date)] Install OS libraries"
sudo apt-get update
sudo apt-get install -y git gcc make python3-pip unzip

echo "[${namespace}][${project}][$(date)] Install AWS CLI"
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

echo "[${namespace}][${project}][$(date)] Update job status"

DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
echo "date: $DATE" > 2_STARTED.yml
echo "project_git_checkout: ${project_git_checkout}" >> 2_STARTED.yml
echo "instance_id: $INSTANCE_ID" >> 2_STARTED.yml
echo "pr_number: ${pr_number}" >> 2_STARTED.yml

aws s3 cp 2_STARTED.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/$INSTANCE_ID/status/
aws s3 cp 2_STARTED.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/latest/status/
aws s3 cp 2_STARTED.yml s3://${s3_bucket}/2_STARTED/$INSTANCE_ID

echo "[${namespace}][${project}][$(date)] Install Node.js"
curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

echo "[${namespace}][${project}][$(date)] Install yarn"
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update && sudo apt install -y yarn

echo "[${namespace}][${project}][$(date)] Install solc-select"
pip3 install solc-select --user
export PATH="$PATH:/root/.local/bin"

echo "[${namespace}][${project}][$(date)] Install solidity ${solidity_version}"
solc-select install ${solidity_version}
solc-select use ${solidity_version}

echo "[${namespace}][${project}][$(date)] Install slither"
pip3 install slither-analyzer --user

echo "[${namespace}][${project}][$(date)] Install echidna"
wget https://github.com/crytic/echidna/releases/download/v2.0.5/echidna-test-2.0.5-Ubuntu-22.04.tar.gz
tar -xvkf echidna-test-2.0.5-Ubuntu-22.04.tar.gz
sudo mv echidna-test /usr/bin/

echo "[${namespace}][${project}][$(date)] Install git project"
git clone ${project_git_url} 
cd "$(basename ${project_git_url} .git)"
git checkout ${project_git_checkout}

echo "[${namespace}][${project}][$(date)] Load previous output from S3"
aws s3 sync s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/output/ $ECHIDNA_DIRECTORY/

DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
echo "date: $DATE" > 3_RUNNING.yml
echo "project_git_checkout: ${project_git_checkout}" >> 3_RUNNING.yml
echo "instance_id: $INSTANCE_ID" >> 3_RUNNING.yml
echo "pr_number: ${pr_number}" >> 3_RUNNING.yml

aws s3 cp 3_RUNNING.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/$INSTANCE_ID/status/
aws s3 cp 3_RUNNING.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/latest/status/
aws s3 cp 3_RUNNING.yml s3://${s3_bucket}/3_RUNNING/$INSTANCE_ID

echo "[${namespace}][${project}][$(date)] Run tests"
echo "[${namespace}][${project}][$(date)] '${run_tests_cmd}'"
${run_tests_cmd} | tee logs.txt

echo "[${namespace}][${project}][$(date)] Copy output to S3"
aws s3 cp /var/log/cloud-init-output.log s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/$INSTANCE_ID/
aws s3 cp /var/log/cloud-init-output.log s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/latest/
aws s3 cp logs.txt s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/$INSTANCE_ID/
aws s3 cp logs.txt s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/latest/
aws s3 sync $ECHIDNA_DIRECTORY/ s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/output/

DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
echo "date: $DATE" > 4_FINISHED.yml
echo "project_git_checkout: ${project_git_checkout}" >> 4_FINISHED.yml
echo "instance_id: $INSTANCE_ID" >> 4_FINISHED.yml
echo "pr_number: ${pr_number}" >> 4_FINISHED.yml

aws s3 cp 4_FINISHED.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/$INSTANCE_ID/status/
aws s3 cp 4_FINISHED.yml s3://${s3_bucket}/project_git_checkout/${project_git_checkout}/latest/status/
aws s3 cp 4_FINISHED.yml s3://${s3_bucket}/4_FINISHED/$INSTANCE_ID

echo "[${namespace}][${project}][$(date)] Finish tests"

sudo shutdown -h now
